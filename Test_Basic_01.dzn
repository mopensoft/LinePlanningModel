nStations = 10; % number of station in a single line in direction order 1->10 and 10->1
turnbackLocs = [1, 3, 6, 10]; % stations that allow to start/stop trains
%possibleRoutes = [| 1,3 | 1,6 | 1,10 | 3,6 | 3,10 | 6,10 |]; % FIXME: this should be calculated automatically from MiniZinc

odmatrix = [| 0,7,35,14,18,71,25,94,32,36
| 0,0,71,30,38,141,53,188,69,76
| 0,0,0,46,57,257,80,343,103,114
| 0,0,0,0,86,343,120,457,155,172
| 0,0,0,0,0,429,180,572,231,256
| 0,0,0,0,0,0,215,1200,277,308
| 0,0,0,0,0,0,0,1400,442,491
| 0,0,0,0,0,0,0,0,1263,1404
| 0,0,0,0,0,0,0,0,0,3000
| 0,0,0,0,0,0,0,0,0,0
|]; % origin - destination matrix which can be used to identify the flow

% link between 2 adjacent stations that include [linkNo, origin, destination, distance] where distance is in meter.
links = [| 1, 2, 1000 | 2, 3, 1000 | 3, 4, 1000 
         | 4, 5, 1000 | 5, 6, 1000 | 6, 7, 1000 
         | 7, 8, 1000 | 8, 9, 1000 | 9, 10, 1000 |]; 
linkCapacity = [5, 5, 5, 5, 5, 7, 7, 7, 7]; % Capacity of each link on 1 direction. Presume that capacity is the same for other direction
linkFlow = [332, 991, 1885, 3128, 4597, 5356, 7016, 5429, 5857]; % number of passenger travelling on each link - This can be calculated from OD matrix with predefine travelling routes

trainCapacity = [1200]; % number of passengers a train can carry. More array item if more trains are used
trainCost = [1]; % cost of train for each meter running

% There are 2 objective, transfer and operation, which need to be combined into single objective function. We define weight on each individual objective as coefficient parameteres
transferWeight = 2; 
operationWeight = 1; 